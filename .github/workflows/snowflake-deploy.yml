name: Execute SnowSQL Commands

on:
  push:
    branches:
      - main  # Runs when pushing to the main branch
  workflow_dispatch:  # Allows manual trigger of the workflow

jobs:
  execute-snowsql:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install SnowSQL
        run: |
          set -e  # Exit immediately if any command fails
          
          # Log the current working directory
          echo "Current directory: $(pwd)"
          
          # Download SnowSQL installer
          echo "Downloading SnowSQL installer..."
          curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.3/linux_x86_64/snowsql-1.3.2-linux_x86_64.bash
          
          # Verify the file was downloaded
          if [ ! -f snowsql-1.3.2-linux_x86_64.bash ]; then
            echo "SnowSQL installer not found!"
            exit 1
          fi
          
          # Make the installer executable
          chmod +x snowsql-1.3.2-linux_x86_64.bash
          
          # Run the SnowSQL installer
          echo "Running SnowSQL installer..."
          ./snowsql-1.3.2-linux_x86_64.bash

      - name: Run SnowSQL Query
        env:
          SNOWSQL_ACCOUNT: ${{ secrets.SNOWSQL_ACCOUNT }}
          SNOWSQL_USER: ${{ secrets.SNOWSQL_USER }}
          SNOWSQL_PASSWORD: ${{ secrets.SNOWSQL_PASSWORD }}
          SNOWSQL_DATABASE: ${{ secrets.SNOWSQL_DATABASE }}
          SNOWSQL_WAREHOUSE: ${{ secrets.SNOWSQL_WAREHOUSE }}
          SNOWSQL_SCHEMA: ${{ secrets.SNOWSQL_SCHEMA }}
        run: |
          # Log environment variables for debugging
          echo "Running SnowSQL query..."
          echo "Account: $SNOWSQL_ACCOUNT"
          
          # Run the query file
          snowsql -a $SNOWSQL_ACCOUNT -u $SNOWSQL_USER -p $SNOWSQL_PASSWORD \
            -d $SNOWSQL_DATABASE -w $SNOWSQL_WAREHOUSE -s $SNOWSQL_SCHEMA \
            -f ./Update_SQL.sql
